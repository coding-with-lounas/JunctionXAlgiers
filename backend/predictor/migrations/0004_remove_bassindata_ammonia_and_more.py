# Generated by Django 5.2.1 on 2025-07-18 21:27

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('predictor', '0003_alter_bassindata_bassin_id'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='bassindata',
            name='ammonia',
        ),
        migrations.RemoveField(
            model_name='bassindata',
            name='dissolved_oxygen',
        ),
        migrations.RemoveField(
            model_name='bassindata',
            name='nitrate',
        ),
        migrations.RemoveField(
            model_name='bassindata',
            name='nitrite',
        ),
        migrations.RemoveField(
            model_name='bassindata',
            name='ph',
        ),
        migrations.RemoveField(
            model_name='bassindata',
            name='temperature',
        ),
        migrations.RemoveField(
            model_name='bassindata',
            name='timestamp',
        ),
        migrations.RemoveField(
            model_name='bassindata',
            name='turbidity',
        ),
        migrations.RemoveField(
            model_name='bassindata',
            name='water_level',
        ),
        migrations.CreateModel(
            name='BassinDataLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('temperature', models.FloatField()),
                ('ph', models.FloatField()),
                ('dissolved_oxygen', models.FloatField()),
                ('water_level', models.FloatField()),
                ('ammonia', models.FloatField()),
                ('nitrite', models.FloatField()),
                ('nitrate', models.FloatField()),
                ('turbidity', models.FloatField()),
                ('bassin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='predictor.bassindata')),
            ],
        ),
    ]
